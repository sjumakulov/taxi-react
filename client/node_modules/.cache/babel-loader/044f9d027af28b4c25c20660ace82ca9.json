{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\USER\\\\Documents\\\\React Projects\\\\taxi-react\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\React Projects\\\\taxi-react\\\\client\\\\src\\\\components\\\\body\\\\deadLineCounter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeadlineCounter(props) {\n  _s();\n\n  var _useState = useState(progress),\n      _useState2 = _slicedToArray(_useState, 2),\n      pWidth = _useState2[0],\n      setWidth = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      daysLeft = _useState4[0],\n      setDaysLeft = _useState4[1];\n\n  var deadLine = new Date(props.deadLine).getTime();\n  var startDate = new Date(props.startDate).getTime();\n  var today = new Date().getTime();\n  var totalTime = deadLine - startDate;\n  var timeLeft = deadLine - today;\n  var secondsLeft = timeLeft / 1000;\n  var progress = Math.floor(timeLeft / totalTime * 100);\n  useEffect(function () {\n    var interval = setInterval(function () {\n      secondsLeft--;\n      var daysLeft = Math.floor(secondsLeft / (60 * 60 * 24)); // let hoursLeft = Math.floor((secondsLeft/(60*60))%24);\n      // let minutesLeft = Math.floor((secondsLeft/(60))%60);\n      // let secondsL = Math.floor(secondsLeft%60);\n\n      progress = Math.floor(timeLeft / totalTime * 100);\n      setDaysLeft(daysLeft);\n      setWidth(progress);\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n\n  function handleChange(e) {\n    console.log(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      className: \"input-disabled dead-line\",\n      type: \"date\",\n      value: new Date(props.deadLine).toISOString().slice(0, 10),\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-count\",\n      children: daysLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      value: new Date(props.startDate).toISOString().slice(0, 10)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: pWidth + \"%\",\n          backgroundColor: pWidth < 10 ? \"red\" : pWidth < 20 && \"orange\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeadlineCounter, \"z39NkJ8JiZS26upQeWOuEcBE/1E=\");\n\n_c = DeadlineCounter;\nexport default DeadlineCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeadlineCounter\");","map":{"version":3,"sources":["C:/Users/USER/Documents/React Projects/taxi-react/client/src/components/body/deadLineCounter.jsx"],"names":["React","useEffect","useState","DeadlineCounter","props","progress","pWidth","setWidth","daysLeft","setDaysLeft","deadLine","Date","getTime","startDate","today","totalTime","timeLeft","secondsLeft","Math","floor","interval","setInterval","clearInterval","handleChange","e","console","log","target","value","toISOString","slice","width","backgroundColor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,kBAAyBF,QAAQ,CAACG,QAAD,CAAjC;AAAA;AAAA,MAAKC,MAAL;AAAA,MAAaC,QAAb;;AACA,mBAA8BL,QAAQ,CAAC,CAAD,CAAtC;AAAA;AAAA,MAAKM,QAAL;AAAA,MAAeC,WAAf;;AAEA,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASP,KAAK,CAACM,QAAf,EAAyBE,OAAzB,EAAf;AACA,MAAIC,SAAS,GAAG,IAAIF,IAAJ,CAASP,KAAK,CAACS,SAAf,EAA0BD,OAA1B,EAAhB;AACA,MAAIE,KAAK,GAAG,IAAIH,IAAJ,GAAWC,OAAX,EAAZ;AAEA,MAAIG,SAAS,GAAGL,QAAQ,GAAGG,SAA3B;AACA,MAAIG,QAAQ,GAAGN,QAAQ,GAAGI,KAA1B;AACA,MAAIG,WAAW,GAAGD,QAAQ,GAAC,IAA3B;AACA,MAAIX,QAAQ,GAAGa,IAAI,CAACC,KAAL,CAAYH,QAAQ,GAACD,SAAV,GAAuB,GAAlC,CAAf;AAGAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMmB,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjCJ,MAAAA,WAAW;AACX,UAAIT,QAAQ,GAAGU,IAAI,CAACC,KAAL,CAAWF,WAAW,IAAE,KAAG,EAAH,GAAM,EAAR,CAAtB,CAAf,CAFiC,CAGjC;AACA;AACA;;AACAZ,MAAAA,QAAQ,GAAGa,IAAI,CAACC,KAAL,CAAYH,QAAQ,GAACD,SAAV,GAAuB,GAAlC,CAAX;AACAN,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAD,MAAAA,QAAQ,CAACF,QAAD,CAAR;AACD,KAT2B,EASzB,IATyB,CAA5B;AAUA,WAAO;AAAA,aAAMiB,aAAa,CAACF,QAAD,CAAnB;AAAA,KAAP;AACD,GAZQ,EAYN,EAZM,CAAT;;AAcA,WAASG,YAAT,CAAsBC,CAAtB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACD;;AAED,sBACE;AAAA,4BACE;AACE,MAAA,QAAQ,EAAEL,YADZ;AAEE,MAAA,SAAS,EAAC,0BAFZ;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAE,IAAIZ,IAAJ,CAASP,KAAK,CAACM,QAAf,EAAyBmB,WAAzB,GAAuCC,KAAvC,CAA6C,CAA7C,EAAgD,EAAhD,CAJT;AAKE,MAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAAiCtB;AAAjC;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAE,IAAIG,IAAJ,CAASP,KAAK,CAACS,SAAf,EAA0BgB,WAA1B,GAAwCC,KAAxC,CAA8C,CAA9C,EAAiD,EAAjD;AAFT;AAAA;AAAA;AAAA;AAAA,YATF,eAaE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAEzB,MAAM,GAAG,GADX;AAEL0B,UAAAA,eAAe,EAAE1B,MAAM,GAAG,EAAT,GAAc,KAAd,GAAsBA,MAAM,GAAG,EAAT,IAAe;AAFjD;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAzDQH,e;;KAAAA,e;AA2DT,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction DeadlineCounter(props) {\r\n  let [pWidth, setWidth] = useState(progress);\r\n  let [daysLeft, setDaysLeft] = useState(0);\r\n\r\n  let deadLine = new Date(props.deadLine).getTime();\r\n  let startDate = new Date(props.startDate).getTime();\r\n  let today = new Date().getTime();\r\n\r\n  let totalTime = deadLine - startDate;\r\n  let timeLeft = deadLine - today;\r\n  let secondsLeft = timeLeft/1000;\r\n  let progress = Math.floor((timeLeft/totalTime) * 100);\r\n\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      secondsLeft--;\r\n      let daysLeft = Math.floor(secondsLeft/(60*60*24));\r\n      // let hoursLeft = Math.floor((secondsLeft/(60*60))%24);\r\n      // let minutesLeft = Math.floor((secondsLeft/(60))%60);\r\n      // let secondsL = Math.floor(secondsLeft%60);\r\n      progress = Math.floor((timeLeft/totalTime) * 100);\r\n      setDaysLeft(daysLeft);\r\n      setWidth(progress);\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  function handleChange(e) {\r\n    console.log(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        onChange={handleChange}\r\n        className=\"input-disabled dead-line\"\r\n        type=\"date\"\r\n        value={new Date(props.deadLine).toISOString().slice(0, 10)}\r\n        disabled\r\n      />\r\n      <div className=\"progress-count\">{daysLeft}</div>\r\n      <input\r\n        type=\"hidden\"\r\n        value={new Date(props.startDate).toISOString().slice(0, 10)}\r\n      />\r\n      <div className=\"progress-div\">\r\n        <div\r\n          className=\"progress-bar\"\r\n          style={{\r\n            width: pWidth + \"%\",\r\n            backgroundColor: pWidth < 10 ? \"red\" : pWidth < 20 && \"orange\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeadlineCounter;\r\n"]},"metadata":{},"sourceType":"module"}