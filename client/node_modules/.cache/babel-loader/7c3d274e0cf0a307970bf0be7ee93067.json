{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\USER\\\\Documents\\\\React Projects\\\\taxi-react\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\React Projects\\\\taxi-react\\\\client\\\\src\\\\components\\\\body\\\\deadLineCounter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeadlineCounter(props) {\n  _s();\n\n  var _useState = useState(progress),\n      _useState2 = _slicedToArray(_useState, 2),\n      pWidth = _useState2[0],\n      setWidth = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      DHleft = _useState4[0],\n      setDaysLeft = _useState4[1];\n\n  var deadLine = new Date(props.deadLine).getTime();\n  var startDate = new Date(props.startDate).getTime();\n  var today = new Date().getTime();\n  var totalTime = deadLine - startDate;\n  var timeLeft = deadLine - today;\n  var secondsLeft = timeLeft / 1000;\n  var progress = Math.floor(timeLeft / totalTime * 100);\n  useEffect(function () {\n    var interval = setInterval(function () {\n      secondsLeft--;\n      var daysLeft = Math.floor(secondsLeft / (60 * 60 * 24));\n      var hoursLeft = Math.floor(secondsLeft / (60 * 60) % 24);\n      var minutesLeft = Math.floor(secondsLeft / 60 % 60);\n      var secondsL = Math.floor(secondsLeft % 60);\n      progress = Math.floor(timeLeft / totalTime * 100);\n      setDaysLeft(\"\".concat(daysLeft, \" \\u043A\\u0443\\u043D  \").concat(hoursLeft, \" \\u0441\\u043E\\u0430\\u0442 \").concat(minutesLeft, \" \\u043C\\u0438\\u043D\\u0443\\u0442  \").concat(secondsL, \" \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434 \\u049B\\u043E\\u043B\\u0434\\u0438\"));\n      setWidth(progress);\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n\n  function handleChange(e) {\n    console.log(e);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        className: \"input-disabled dead-line\",\n        type: \"date\",\n        value: new Date(props.deadLine).toISOString().slice(0, 10),\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      value: new Date(props.startDate).toISOString().slice(0, 10)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-div mytooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: pWidth + \"%\",\n          backgroundColor: pWidth < 10 ? \"red\" : pWidth < 20 && \"orange\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mytooltiptext\",\n        children: DHleft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeadlineCounter, \"1cFBNsLDfna4IbCM2epPMkRdkUI=\");\n\n_c = DeadlineCounter;\nexport default DeadlineCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeadlineCounter\");","map":{"version":3,"sources":["C:/Users/USER/Documents/React Projects/taxi-react/client/src/components/body/deadLineCounter.jsx"],"names":["React","useEffect","useState","useRef","DeadlineCounter","props","progress","pWidth","setWidth","DHleft","setDaysLeft","deadLine","Date","getTime","startDate","today","totalTime","timeLeft","secondsLeft","Math","floor","interval","setInterval","daysLeft","hoursLeft","minutesLeft","secondsL","clearInterval","handleChange","e","console","log","toISOString","slice","width","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nfunction DeadlineCounter(props) {\r\n  let [pWidth, setWidth] = useState(progress);\r\n  let [DHleft, setDaysLeft] = useState(\"\");\r\n\r\n  let deadLine = new Date(props.deadLine).getTime();\r\n  let startDate = new Date(props.startDate).getTime();\r\n  let today = new Date().getTime();\r\n\r\n  let totalTime = deadLine - startDate;\r\n  let timeLeft = deadLine - today;\r\n  let secondsLeft = timeLeft / 1000;\r\n  let progress = Math.floor((timeLeft / totalTime) * 100);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      secondsLeft--;\r\n      let daysLeft = Math.floor(secondsLeft / (60 * 60 * 24));\r\n      let hoursLeft = Math.floor((secondsLeft / (60 * 60)) % 24);\r\n      let minutesLeft = Math.floor((secondsLeft / 60) % 60);\r\n      let secondsL = Math.floor(secondsLeft % 60);\r\n      progress = Math.floor((timeLeft / totalTime) * 100);\r\n      setDaysLeft(\r\n        `${daysLeft} кун  ${hoursLeft} соат ${minutesLeft} минут  ${secondsL} секунд қолди`\r\n      );\r\n      setWidth(progress);\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  function handleChange(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <div>\r\n        <input\r\n          onChange={handleChange}\r\n          className=\"input-disabled dead-line\"\r\n          type=\"date\"\r\n          value={new Date(props.deadLine).toISOString().slice(0, 10)}\r\n          disabled\r\n        />\r\n      </div>\r\n      <input\r\n        type=\"hidden\"\r\n        value={new Date(props.startDate).toISOString().slice(0, 10)}\r\n      />\r\n      <div className=\"progress-div mytooltip\">\r\n        <div\r\n          className=\"progress-bar\"\r\n          style={{\r\n            width: pWidth + \"%\",\r\n            backgroundColor: pWidth < 10 ? \"red\" : pWidth < 20 && \"orange\",\r\n          }}\r\n        ></div>\r\n        <div className=\"mytooltiptext\">{DHleft}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeadlineCounter;\r\n"]},"metadata":{},"sourceType":"module"}