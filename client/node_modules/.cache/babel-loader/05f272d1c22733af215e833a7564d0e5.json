{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\USER\\\\Documents\\\\React Projects\\\\taxi-react\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\React Projects\\\\taxi-react\\\\client\\\\src\\\\components\\\\print\\\\calendarPrint.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./calendarPrint.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CalendarPrint(props) {\n  _s();\n\n  var _this = this;\n\n  window.addEventListener(\"click\", function (e) {\n    console.log(e.target.className + \"click!!!\");\n  });\n\n  var _useState = useState(new Date().getFullYear()),\n      _useState2 = _slicedToArray(_useState, 2),\n      year = _useState2[0],\n      setYear = _useState2[1];\n\n  function decrementYear() {\n    setYear(function (prevV) {\n      return prevV - 1;\n    });\n  }\n\n  function incrementYear() {\n    setYear(function (prevV) {\n      return prevV + 1;\n    });\n  }\n\n  function chooseMonth(e) {\n    var month = parseInt(e.target.id) + 1;\n    var numberOfDays = new Date(year, month, 0).getDate();\n\n    for (var i = 1; i <= numberOfDays; i++) {\n      var date = new Date(year, month - 1, i).toLocaleDateString(\"en-UK\").replaceAll(\"/\", \".\");\n      console.log(date);\n    }\n  }\n\n  var months = [\"Янв\", \"Фев\", \"Мар\", \"Апр\", \"Май\", \"Июн\", \"Июл\", \"Авг\", \"Сен\", \"Окт\", \"Ной\", \"Дек\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cal-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cal-container\",\n      style: {\n        display: \"\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: decrementYear,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-angle-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), year, /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: incrementYear,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-angle-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cal-body\",\n        onClick: chooseMonth,\n        children: months.map(function (mon, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: index + \"month\",\n            style: index === new Date().getMonth() ? {\n              border: \"1px solid lightseagreen\"\n            } : null,\n            children: mon\n          }, index + \"month\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CalendarPrint, \"0aXGxzo9YBKCNwgTZeYIvBpUYf4=\");\n\n_c = CalendarPrint;\nexport default CalendarPrint;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarPrint\");","map":{"version":3,"sources":["C:/Users/USER/Documents/React Projects/taxi-react/client/src/components/print/calendarPrint.jsx"],"names":["React","useState","CalendarPrint","props","window","addEventListener","e","console","log","target","className","Date","getFullYear","year","setYear","decrementYear","prevV","incrementYear","chooseMonth","month","parseInt","id","numberOfDays","getDate","i","date","toLocaleDateString","replaceAll","months","display","map","mon","index","getMonth","border"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./calendarPrint.css\";\r\n\r\nfunction CalendarPrint(props) {\r\n  window.addEventListener(\"click\", (e)=>{console.log(e.target.className + \"click!!!\")})\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n\r\n  function decrementYear() {\r\n    setYear((prevV) => {\r\n      return prevV - 1;\r\n    });\r\n  }\r\n\r\n  function incrementYear() {\r\n    setYear((prevV) => {\r\n      return prevV + 1;\r\n    });\r\n  }\r\n\r\n  function chooseMonth(e) {\r\n    let month = parseInt(e.target.id) + 1;\r\n    let numberOfDays = new Date(year, month, 0).getDate();\r\n\r\n    for (let i = 1; i <= numberOfDays; i++) {\r\n      const date = new Date(year, month - 1, i)\r\n        .toLocaleDateString(\"en-UK\")\r\n        .replaceAll(\"/\", \".\");\r\n      console.log(date);\r\n    }\r\n  }\r\n  const months = [\r\n    \"Янв\",\r\n    \"Фев\",\r\n    \"Мар\",\r\n    \"Апр\",\r\n    \"Май\",\r\n    \"Июн\",\r\n    \"Июл\",\r\n    \"Авг\",\r\n    \"Сен\",\r\n    \"Окт\",\r\n    \"Ной\",\r\n    \"Дек\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"cal-background\">\r\n      <div\r\n        className=\"cal-container\"\r\n        style={{ display: \"\" }}\r\n      >\r\n        <div className=\"cal-header\">\r\n          <div onClick={decrementYear}>\r\n            {<i className=\"far fa-angle-left\"></i>}\r\n          </div>\r\n          {year}\r\n          <div onClick={incrementYear}>\r\n            {<i className=\"far fa-angle-right\"></i>}\r\n          </div>\r\n        </div>\r\n        <div className=\"cal-body\" onClick={chooseMonth}>\r\n          {months.map((mon, index) => {\r\n            return (\r\n              <div\r\n                key={index + \"month\"}\r\n                id={index + \"month\"}\r\n                style={\r\n                  index === new Date().getMonth()\r\n                    ? { border: \"1px solid lightseagreen\" }\r\n                    : null\r\n                }\r\n              >\r\n                {mon}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarPrint;\r\n"]},"metadata":{},"sourceType":"module"}